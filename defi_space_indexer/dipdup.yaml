spec_version: 3.0
package: defi_space_indexer

logging: INFO

database:
  kind: postgres
  host: ${POSTGRES_HOST:-db}
  port: 5432
  user: ${POSTGRES_USER:-dipdup}
  password: ${POSTGRES_PASSWORD}
  database: ${POSTGRES_DB:-dipdup}

hasura:
  url: http://${HASURA_HOST:-hasura}:8080
  admin_secret: ${HASURA_SECRET}
  allow_aggregations: ${HASURA_ALLOW_AGGREGATIONS:-true}
  select_limit: ${HASURA_SELECT_LIMIT:-10000}
  camel_case: ${HASURA_CAMEL_CASE:-true}

datasources:
  # subsquid:
  #   kind: starknet.subsquid
  #   url: ${SUBSQUID_URL:-https://v2.archive.subsquid.io/network/starknet-mainnet}
  node:
    kind: starknet.node
    url: ${NODE_URL}/${NODE_API_KEY}
    http:
      ratelimit_rate: 3
      ratelimit_period: 1
      ratelimit_sleep: 1

contracts:
  amm_factory:
    kind: starknet
    address: '0x35e1be3829dbdf1b66d6bd78c0c4a7293881668c508c6e3a93f4448767603ae'
    typename: amm_factory

  amm_pair:
    kind: starknet
    address: '0x477c6c84be0d31493b62aa19b19af81a03dfbcfea3749662aa18352a49b589b' # Template
    typename: amm_pair

  farming_factory:
    kind: starknet
    address: '0x27443aba611f9fee5f3bb15de8f166a3e47b598e41ae78dfb7eef4a90b7b3be'
    typename: farming_factory

  farming_reactor:
    kind: starknet
    address: '0x410ff65cc03b29d172519e51a4ee56cd8a2dfb38a1ff095231e758219b4e78b' # Template
    typename: farming_reactor

  game_factory:
    kind: starknet
    address: '0x2d8931c0204835a2acf4d5737c80a7f4d94e9a70aa5e0dab9798c19272bfef5'
    typename: game_factory

  game_session:
    kind: starknet
    address: '0x699c162e7c722d07e04294350352576c92624d68228abf2be6098719ab9883a' # Template
    typename: game_session

indexes:
  amm_factory_events:
    kind: starknet.events
    first_level: 605250
    datasources:
      # - subsquid
      - node
    handlers:
      - callback: on_pair_created
        contract: amm_factory
        name: PairCreated
      - callback: on_fees_receiver_updated
        contract: amm_factory
        name: FeesReceiverUpdated
      - callback: on_owner_updated
        contract: amm_factory
        name: OwnerUpdated
      - callback: on_pair_contract_class_hash_updated
        contract: amm_factory
        name: PairContractClassHashUpdated
      - callback: on_factory_initialized
        contract: amm_factory
        name: FactoryInitialized

  farming_factory_events:
    kind: starknet.events
    first_level: 605251
    datasources:
      # - subsquid
      - node
    handlers:
      - callback: on_reactor_created
        contract: farming_factory
        name: ReactorCreated
      - callback: on_powerplant_ownership_transferred
        contract: farming_factory
        name: OwnershipTransferred
      - callback: on_reactor_class_hash_updated
        contract: farming_factory
        name: ReactorClassHashUpdated
      - callback: on_powerplant_initialized
        contract: farming_factory
        name: PowerplantInitialized

  game_factory_events:
    kind: starknet.events
    first_level: 621296
    datasources:
      # - subsquid
      - node
    handlers:
      - callback: on_game_factory_initialized
        contract: game_factory
        name: FactoryInitialized
      - callback: on_game_session_created
        contract: game_factory
        name: GameSessionCreated
      - callback: on_game_ownership_transferred
        contract: game_factory
        name: OwnershipTransferred
      - callback: on_game_session_class_hash_updated
        contract: game_factory
        name: GameSessionClassHashUpdated

  # ---- For code generation only ----
  # reactor_events_init:
  #   template: reactor_events
  #   values:
  #     contract: farming_reactor
  # pair_events_init:
  #   template: pair_events
  #   values:
  #     contract: amm_pair
  # game_session_events_init:
  #   template: game_session_events
  #   values:
  #     contract: game_session

templates:
  pair_events:
    kind: starknet.events
    first_level: 605250
    datasources:
      # - subsquid
      - node
    handlers:
      - callback: on_mint
        contract: <contract>
        name: Mint
      - callback: on_burn
        contract: <contract>
        name: Burn
      - callback: on_swap
        contract: <contract>
        name: Swap
      - callback: on_sync
        contract: <contract>
        name: Sync
      - callback: on_skim
        contract: <contract>
        name: Skim

  reactor_events:
    kind: starknet.events
    first_level: 605251
    datasources:
      # - subsquid
      - node
    handlers:
      - callback: on_deposit
        contract: <contract>
        name: Deposit
      - callback: on_withdraw
        contract: <contract>
        name: Withdraw
      - callback: on_harvest
        contract: <contract>
        name: Harvest
      - callback: on_reward_added
        contract: <contract>
        name: RewardAdded
      - callback: on_erc20_recovered
        contract: <contract>
        name: ERC20Recovered
      - callback: on_unallocated_rewards_claimed
        contract: <contract>
        name: UnallocatedRewardsClaimed
      - callback: on_penalty_receiver_updated
        contract: <contract>
        name: PenaltyReceiverUpdated
      - callback: on_rewarder_added
        contract: <contract>
        name: RewarderAdded
      - callback: on_rewarder_removed
        contract: <contract>
        name: RewarderRemoved
      - callback: on_reactor_ownership_transferred
        contract: <contract>
        name: OwnershipTransferred

  game_session_events:
    kind: starknet.events
    first_level: 621296
    datasources:
      # - subsquid
      - node
    handlers:
      - callback: on_game_suspended
        contract: <contract>
        name: GameSuspended
      - callback: on_game_over
        contract: <contract>
        name: GameOver
      - callback: on_stake_window_created
        contract: <contract>
        name: StakeWindowCreated
      - callback: on_user_staked
        contract: <contract>
        name: UserStaked
      - callback: on_user_unstaked
        contract: <contract>
        name: UserUnstaked
      - callback: on_emergency_withdraw
        contract: <contract>
        name: EmergencyWithdraw
      - callback: on_rewards_claimed
        contract: <contract>
        name: RewardsClaimed
      - callback: on_fee_recipient_updated
        contract: <contract>
        name: FeeRecipientUpdated
      - callback: on_game_initialized
        contract: <contract>
        name: GameInitialized

hooks:
  calculate_game_metrics:
    callback: calculate_game_metrics
    atomic: False
    args:
      factory_address: str | None
      session_address: str | None
  active_staking_window:
    callback: active_staking_window
    atomic: False
    args:
      update_all: bool
      session_address: str | None

jobs:
  game_metrics_update:
    hook: calculate_game_metrics
    interval: 60
  active_staking_window:
    hook: active_staking_window
    interval: 30
    args:
      update_all: true
      session_address: null